#summary One-sentence summary of this page.

= Tracking =

== 1.Introduction ==
This part presents the tracking implementation of our project. We have started with a simple tracking algorithm based on background subtraction and motion estimation. Based on the real requirements of the project, the proposed algorithm failed in a large number of cases and a more stable algorithm was needed: particle filter. In the next sections short details of both algorithms will be presented.

== 2.Background subtraction and Motion estimation ==
The algorithm is based on subtraction between each frame and background. Due to the fact that the robot was supposed to be placed in a bar, with highly changeable background, the reference frame known as background, is update from time to time in order to keep a stable algorithm.

=== Algorithm: === 

*1. Background subtraction*
     In order to make the system more stable and to estimate the motion, we have used both the difference between the current frame and the background and the difference between current and previous frame. Doing the difference between the corresponding regions of the frame and the background, if the value obtained is higher than a given threshold, then the blob in the frame is considered as the foreground and could be part of the tracked person. 

*2. Candidate object identification*
    In this part the candidates are located based on the difference image, that is first thresholded. The candidates will be represented by bounding boxes obtained after finding the connected components from the binary image. A threshold is used in order to keep only the most important bounding boxes.
   
*3. Target object selection*
   Having all the foreground information, the goal is to track the object of interest among all the candidates. In order to do this the colour information is used. A certain foreground object will be considered as the tracked object if it has the maximum colour-based similarity and minimum distance to the object marked by the detection. For the colour-based similarity the histogram matching was used and for the distance similarity, the distance between the centre of the object and the backprojection was used.

  
=== Results ===

https://scoialrobot.googlecode.com/svn/trunk/social_robot/pictures/substraction.png

== 3.Particle filter ==

=== Algorithm ===

=== Results ===